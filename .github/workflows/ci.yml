name: CI
on:
  push:
jobs:
  ci:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PACKAGES_READER_GITHUB_TOKEN: ${{ secrets.PACKAGES_READER_GITHUB_TOKEN }}
        PACKAGES_READER_GITHUB_USER: ${{ secrets.PACKAGES_READER_GITHUB_USER }}
        CWM_WORKER_HELM_DEPLOY_KEY: ${{ secrets.CWM_WORKER_HELM_DEPLOY_KEY }}
        CWM_API_URL: ${{ secrets.CWM_API_URL }}
        AWS_ROUTE53_HOSTEDZONE_ID: ${{ secrets.AWS_ROUTE53_HOSTEDZONE_ID }}
        AWS_ROUTE53_HOSTEDZONE_DOMAIN: ${{ secrets.AWS_ROUTE53_HOSTEDZONE_DOMAIN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        sudo bin/install_minikube.sh && minikube version &&\
        bin/minikube_start.sh &&\
        sudo bin/install_kubectl.sh && kubectl version --client &&\
        sudo bin/install_helm.sh && helm version &&\
        sudo bin/install_python.sh &&\
        sudo bin/install_redis_cli.sh &&\
        bin/python_init_venv_requirements_module.sh &&\
        bin/redis_start_wait.sh &&\
        bin/minikube_wait.sh &&\
        bin/prometheus_deploy_wait.sh &&\
        bin/docker_login.sh &&\
        . venv/bin/activate &&\
        export DEBUG=yes &&\
        export DEBUG_VERBOSITY=10 &&\
        export REDIS_HOST=172.17.0.1 &&\
        export CWM_ZONE=EU &&\
        export DEPLOYER_WAIT_DEPLOYMENT_READY_MAX_SECONDS="30.0" &&\
        export CWM_WORKER_DEPLOYMENT_HELM_CACHE_DIR="$(pwd)/.cwm_worker_deployment_helm_cache" &&\
        export CACHE_MINIO_VERSIONS=0.0.0-20200829T091900,0.0.0-20200910T100633 &&\
        export WAITER_VERIFY_WORKER_ACCESS=no &&\
        echo running tests &&\
        pytest &&\
        docker pull docker.pkg.github.com/cloudwebmanage/cwm-worker-operator/cwm_worker_operator:latest &&\
        docker build --cache-from docker.pkg.github.com/cloudwebmanage/cwm-worker-operator/cwm_worker_operator:latest\
                     -t cwm_worker_operator . &&\
        bin/docker_push_sha.sh &&\
        if [ "${GITHUB_REF}" == "refs/heads/master" ]; then
          bin/docker_push_latest.sh &&\
          sed -i "s/appVersion: latest/appVersion: ${GITHUB_SHA}/g" helm/Chart.yaml &&\
          bin/helm_publish.sh
        fi

    - uses: 8398a7/action-slack@v3
      if: github.ref == 'refs/heads/master'
      with:
        status: ${{ job.status }}
        author_name: ${{ github.actor }}
        fields: all
        if_mention: success,failure
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
